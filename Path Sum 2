/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,int targetSum,vector<int>&temp,vector<vector<int>>&ans){
        if(!root->left && !root->right)
        {
            if(targetSum == root->val){
                
                    temp.push_back(root->val);
                     ans.push_back(temp);
                     temp.pop_back();
                
               
            }
            return ;
        }
        // if(targetSum < root->val)
        // return;
        temp.push_back(root->val);
        if(root->left)
        solve(root->left,targetSum- root->val,temp,ans);
        if(root->right)
        solve(root->right,targetSum- root->val,temp,ans);
        temp.pop_back();

    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int>temp;
        if(!root)
        return ans;
        solve(root,targetSum,temp,ans);
        return ans;
    }
};
